<div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="proposalDetailModalLabel">Definir compromiso</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <input type="hidden" id="proposalId" name="id" value="<%= proposal._id %>">
            <h4 id="proposalTitle">
                <%= proposal.title %>
            </h4>

            <p>
                <% proposal.categories.forEach((categoryId)=> { %>
                    <span class="badge bg-primary">
                        <%= categories[categoryId] %>
                    </span>
                    <% }) %>
            </p>

            <p id="proposalDescription">
                <%- proposal.description %>
            </p>

            <hr>

            <% if (proposal.centres && proposal.centres.length> 0) { %>
                <p><strong>Escuelas desde las que se propone:</strong> <span id="proposingCentres">
                        <%= proposal.centres.map(c=> centres[c]).join(', ') %>
                    </span></p>
                <% } %>

                    <%- include('../proposalParams', {proposal}) %>

                        <hr>

                        <div>
                            <form hx-post="/api/commitments/proposals/<%= proposal._id.toString() %>" hx-ext="json-enc"
                                hx-target="#toastr-container"
                                hx-on::after-request="if (event.detail.xhr.status === 200) htmx.ajax('GET', '/api/commitments/proposals/<%= proposal._id.toString() %>/row', { target: '#proposal-row-<%= proposal._id.toString() %>' });">
                                <label for="commitmentContent"><b>Compromiso con la propuesta:</b></label>

                                <textarea id="proposalCommitmentModalContent" name="content"
                                    hx-post="/api/commitments/proposals/<%= proposal._id.toString() %>"
                                    hx-ext="json-enc" hx-target="#toastr-container" hx-trigger="every 60s"
                                    required><% if (proposal.commitment) { %><%- proposal.commitment %><% } %></textarea>


                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary mt-3 me-5">Guardar</button>
                                    <button type="button" class="btn btn-danger mt-3 ms-5"
                                        hx-delete="/api/commitments/proposals/<%= proposal._id.toString() %>"
                                        hx-ext="json-enc" hx-target="#toastr-container"
                                        hx-confirm="¿Estás seguro de que deseas borrar tu compromiso con esta propuesta?"
                                        hx-on::after-request="if (event.detail.xhr.status === 200) {$('#proposalCommitmentModal').modal('hide'); htmx.ajax('GET', '/api/commitments/proposals/<%= proposal._id.toString() %>/row', { target: '#proposal-row-<%= proposal._id.toString() %>' })};">Borrar</button>
                                </div>
                            </form>
                        </div>
        </div>


        <div class="modal-footer mt-5">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
    </div>
</div>

<script>
    $('#proposalCommitmentModal').on('shown.bs.modal', () => {
        $('#proposalCommitmentModalContent').summernote({
            placeholder: 'Indica cómo se compromete tu candidatura con esta propuesta...',
            height: 300,
            toolbar: [
                ['style', ['bold', 'italic', 'underline']],
                ['para', ['ul', 'ol']]
            ],
            fontNamesIgnoreCheck: ['Helvetica'],
        });

        const textarea = document.getElementById('proposalCommitmentModalContent');
        const form = textarea.closest('form');
        let hasUnsavedChanges = false;
        let originalContent = textarea.value;

        // Detectar cambios en el editor
        $('#proposalCommitmentModalContent').on('summernote.change', function (_, contents) {
            hasUnsavedChanges = contents !== originalContent;
        });

        // Reset state when form is submitted
        form.addEventListener('submit', function () {
            hasUnsavedChanges = false;
            originalContent = textarea.value;
        });

        // Añadir listener para el cierre del modal
        const modal = document.getElementById('proposalCommitmentModal');
        modal.addEventListener('hide.bs.modal', function (event) {
            if (hasUnsavedChanges) {
                if (!confirm('Hay cambios sin guardar. ¿Estás seguro de que quieres cerrar?')) {
                    event.preventDefault();
                } else {
                    hasUnsavedChanges = false;
                    textarea.value = originalContent;
                }
            }
        });
    });
</script>

<script>
    $('#proposalCommitmentModal').on('hidden.bs.modal', () => {
        $('#proposalCommitmentModalContent').summernote('destroy');
        $('#proposalCommitmentModal').html('');
    });
</script>