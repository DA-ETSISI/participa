<div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="commitmentsDocModalLabel">Documento de compromisos</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <p class="text-center">Si experimentas problemas con el proceso de firma, puedes descargar el documento, firmarlo en local y remitirlo por correo a <a href="mailto:da.elecciones@upm.es">da.elecciones@upm.es</a>.</p>
            <object id="pdfViewer" data="" type="application/pdf" style="width: 100%; height: 600px;">
                <embed id="pdfEmbed" src="" type="application/pdf" />
            </object>
            <div class="text-center">
                <button id="signingButton" type="button" class="btn btn-primary mt-3 me-5" onclick="startSign()">
                    <span id="signingSpinner" class="spinner-border spinner-border-sm visually-hidden" aria-hidden="true"></span>
                    Firmar
                </button>
                <br>
                <br>
                <span id="waitingWarning" class="visually-hidden">La apertura de Autofirma puede tardar unos instantes...</span>
            </div>

        </div>
        <div class="modal-footer mt-5">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
        </div>
    </div>
</div>

<script>
    $('#commitmentsDocModal').on('shown.bs.modal', () => {
        const base64Data = '<%= commitmentsDocument %>'; // Assuming the base64 data is passed as 'commitmentDocument'
        const byteCharacters = atob(base64Data);
        const byteNumbers = new Array(byteCharacters.length);
        for (let i = 0; i < byteCharacters.length; i++) {
            byteNumbers[i] = byteCharacters.charCodeAt(i);
        }
        const byteArray = new Uint8Array(byteNumbers);
        const blob = new Blob([byteArray], { type: 'application/pdf' });
        const url = URL.createObjectURL(blob);
        document.getElementById('pdfViewer').data = url;
        document.getElementById('pdfEmbed').src = url;
    });
</script>

<!-- Scripts necesarios -->
<script type="text/javascript" src="./js/autoscript.js"></script>
<script type="text/javascript">
    function startSign() {
        $('#signingButton').prop('disabled', true);
        $('#signingSpinner').removeClass('visually-hidden');
        $('#waitingWarning').removeClass('visually-hidden');
        try {
            AutoScript.cargarMiniApplet("<%= serverUrl %>/");
            AutoScript.setServlets(
                "<%= serverUrl %>/api/commitments/signature",
                "<%= serverUrl %>/api/commitments/signature"
            );

            const extraParams = {
                filters: "ISSUER=CN=AC FNMT Usuarios,OU=Ceres,O=FNMT-RCM,C=ES|ISSUER=CN=AC DNIE,OU=DNIE,O=DIRECCION GENERAL DE LA POLICIA,C=ES",
                headless: 'true',
                filterAntigovernment: 'true',
                checkTime: 'true',
                checkCertificateValidityInterval: 'true',
                checkCertificatePolicies: 'true',
                mandatoryCertificateConditions: 'true',
                allowTransactions: 'false'
            };
            
            AutoScript.sign(
                "<%= commitmentsDocument %>",
                "SHA256withRSA",
                "PAdES",
                JSON.stringify(extraParams),
                (signature, cert) => {
                    htmx.ajax('POST', '<%= serverUrl %>/api/commitments/signature', {
                        target: '#toastr-container',
                        swap: 'innerHTML',
                        values: {
                            document: signature,
                            certificate: cert
                        }
                    });


                    $('#signingSpinner').addClass('visually-hidden');
                    $('#waitingWarning').addClass('visually-hidden');
                },
                (error, message) => {
                    console.error("Error:", error, message);
                    toastr.error(message || 'Error al firmar el documento.', `Error de Autofirma`);
                    $('#signingSpinner').addClass('visually-hidden');
                    $('#waitingWarning').addClass('visually-hidden');
                    $('#signingButton').prop('disabled', false);
                }
            );
            

        } catch (error) {
            console.error(error);
            toastr.error('Error al firmar el documento.', `Error de Autofirma`);
            $('#signingSpinner').addClass('visually-hidden');
            $('#waitingWarning').addClass('visually-hidden');
            $('#signingButton').prop('disabled', false);
        }
    }
</script>
